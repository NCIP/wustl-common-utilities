package edu.wustl.dao.util;

import java.sql.ResultSet;

/**
 * It will hold all the statement specific data.
 * @author kalpana_thakur
 *
 */
public class StatementData
{

	/**
	 * A ResultSet object containing the auto-generated key.
	 */
	private ResultSet generatedKeys;

	/**
	 * default fetch size.
	 */
	private int fetchSize;

	/**
	 * max field size.
	 */
	private int maxFieldSize;
	/**
	 * maximum number of rows for a ResultSet object.
	 */
	private int maxRows;

	/**
	 * Row count.
	 */
	private int rowCount;

	/**
	 * @return either the row count for INSERT, UPDATE or DELETE statements,
	 * or 0 for SQL statements that return nothing
	 */
	public int getRowCount()
	{
		return rowCount;
	}

	/**
	 * @param rowCount Row count.
	 */
	public void setRowCount(int rowCount)
	{
		this.rowCount = rowCount;
	}

	/**
     * Returns:a ResultSet object containing the auto-generated key(s)
     * generated by the execution of Statement object.
	 * @return a ResultSet
	 */
	public ResultSet getGeneratedKeys()
	{
		return generatedKeys;
	}

	/**
	 * Set the ResultSet object.
	 * @param generatedKeys auto-generated key(s)
	 */
	public void setGeneratedKeys(ResultSet generatedKeys)
	{
		this.generatedKeys = generatedKeys;
	}

	/**
	 * @return the default fetch size for result sets
	 * generated from this Statement object.
	 */
	public int getFetchSize()
	{
		return fetchSize;
	}
	/**
	 * @param fetchSize default fetch size for result sets
	 * generated from this Statement object.
	 */
	public void setFetchSize(int fetchSize)
	{
		this.fetchSize = fetchSize;
	}
	/**
	 * @return the current column size limit for columns storing character and binary values;
	 * zero means there is no limit.
	 */
	public int getMaxFieldSize()
	{
		return maxFieldSize;
	}

	/**
	 * @param maxFieldSize maxfieldSize
	 */
	public void setMaxFieldSize(int maxFieldSize)
	{
		this.maxFieldSize = maxFieldSize;
	}
	/**
	 *@return the current maximum number of rows for a ResultSet object produced by
	 *Statement object; zero means there is no limit
	 */
	public int getMaxRows()
	{
		return maxRows;
	}

	/**
	 * @param maxRows current maximum number of rows for a ResultSet object.
	 */
	public void setMaxRows(int maxRows)
	{
		this.maxRows = maxRows;
	}

	/**
	 * returns the row count.
	 * @return either the row count for INSERT, UPDATE or DELETE statements,
	 * or 0 for SQL statements that return nothing
	 */
	public String toString()
	{
		return String.valueOf(rowCount);
	}



}
