//
// This file was generated by the JavaTM Architecture for
//XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2005.08.23 at 10:44:28 GMT+05:30
//


package edu.wustl.common.cde.xml.impl;

import org.xml.sax.SAXException;

import com.sun.tools.xjc.runtime.AbstractUnmarshallingEventHandlerImpl;
import com.sun.tools.xjc.runtime.UnmarshallableObject;
import com.sun.tools.xjc.runtime.UnmarshallingContext;
import com.sun.tools.xjc.runtime.UnmarshallingEventHandler;
import com.sun.tools.xjc.runtime.ValidatableObject;
import com.sun.tools.xjc.runtime.XMLSerializable;
import com.sun.tools.xjc.runtime.XMLSerializer;

import edu.wustl.common.util.global.Constants;

/**
 *
 */
public class XMLCDECACHEImpl
    extends edu.wustl.common.cde.xml.impl.XMLCDECacheTypeImpl
    implements edu.wustl.common.cde.xml.XMLCDECACHE,
    			com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject,
    			UnmarshallableObject, XMLSerializable, ValidatableObject
{
	/**
	 *
	 */
    public static final java.lang.Class VERSION = (edu.wustl.common.cde.xml.impl.JAXBVersion.class);
    /**
	 *
	 */
    private static com.sun.msv.grammar.Grammar schemaFragment;
    /**
	 * @return Class object
	 */
    /*private static final java.lang.Class PRIMARY_INTERFACE_CLASS()
    {
        return (edu.wustl.common.cde.xml.XMLCDECACHE.class);
    }*/
    /**
     * @return String object.
     */
    public java.lang.String ____jaxb_ri____getNamespaceURI() // NOPMD by shrishail_kalshetty on 8/31/09
    {
        return "";
    }
    /**
     * @return String object.
     */
    public java.lang.String ____jaxb_ri____getLocalName() // NOPMD by shrishail_kalshetty on 8/31/09 5:53 PM
    {
        return Constants.XMLCDE_CACHE;
    }
    /**
     * @param context UnmarshallingContext object.
     * @return UnmarshallingEventHandler object.
     */
    public UnmarshallingEventHandler
    createUnmarshaller(UnmarshallingContext context)
    {
        return new edu.wustl.common.cde.xml.impl.XMLCDECACHEImpl.Unmarshaller(context);
    }
    /**
     * @param context XMLSerializer object.
     * @throws org.xml.sax.SAXException throw SAXException
     */
    public void serializeBody(XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", Constants.XMLCDE_CACHE);
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }
    /**
     * @param context XMLSerializer object.
     * @throws org.xml.sax.SAXException throw SAXException
     */
    public void serializeAttributes(XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    	//Empty serializeAttributes method.
    }
    /**
     * @param context XMLSerializer object.
     * @throws org.xml.sax.SAXException throw SAXException
     */
    public void serializeURIs(XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    	//Empty serializeURIs method.
    }
    /**
     * @return Class object
     */
    public java.lang.Class getPrimaryInterface()
    {
        return edu.wustl.common.cde.xml.XMLCDECACHE.class ;
    }
    /**
     * @return DocumentDeclaration object
     */
    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() // NOPMD
    {
        if (schemaFragment == null)
        {
        	schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
        			"\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern" +
        			"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\t" +
        			"nameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."+
        			"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000" +
        			"\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelt\u0000 Lcom" +
        			"/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8" +
        			"\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000" +
        			"\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000" +
        			"sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000" +
        			"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp" +
        			"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004" +
        			"exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000" +
        			"\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsr\u0000 com.sun.msv." +
        			"grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"+
        			"\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000" +
        			"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000"+
        			"~\u0000\u0004ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~" +
        			"\u0000\u0000pp\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000" +
        			"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsq" +
        			"\u0000~\u0000\fsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c" +
        			 "\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 " +
        			"com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"+
        			"\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000" +
        			"~\u0000\u0001xq\u0000~\u0000\u0004q\u0000~\u0000\u0016psr\u00002com.sun.msv." +
        			"grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"+
        			"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u0015\u0001psr" +
        			"\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000" +
        			"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass" +
        			"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000" +
        			"com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000" +
        			"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000\u001bps" +
        			"r\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000" +
        			"\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;" +
        			"L\u0000\fnamespaceURIq\u0000~\u0000\"xq\u0000~\u0000\u001dt\u0000\u001fedu." +
        			"wustl.common.cde.xml.XMLCDEt\u0000+http://java.sun.com/jaxb/xjc/dummy-elements" +
        			"sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016psr\u0000\u001b" +
        			"com.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001" +
        			"\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;" +
        			"L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun" +
        			"/msv/util/StringPair;xq\u0000~\u0000\u0004ppsr\u0000\"com.sun.msv.datatype.xsd" +
        			".QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x" +
        			"r\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000" +
        			"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd." +
        			"ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x" +
        			"r\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000" +
        			"\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\"L" +
        			"\u0000\btypeNameq\u0000~\u0000\"L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/data" +
        			"type/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/X" +
        			"MLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProce" +
        			"ssor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000" +
        			"\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000" +
        			"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun." +
        			"msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000" +
        			"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004ppsr\u0000\u001bcom.sun.msv." +
        			"util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocal"+
        			"Nameq\u0000~\u0000\"L\u0000\fnamespaceURIq\u0000~\u0000\"xpq\u0000~\u00003q" +
        			"\u0000~\u00002sq\u0000~\u0000!t\u0000\u0004typet\u0000)http://www.w3.org/2001" +
        			"/XMLSchema-instanceq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0006XMLCDEt\u0000" +
        			"\u0000sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0017q\u0000~\u0000\u0016psq" +
        			"\u0000~\u0000(ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000" +
        			"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000-q" +
        			"\u0000~\u00002t\u0000\u0007booleanq\u0000~\u00006q\u0000~\u00008sq\u0000~" +
        			"\u00009q\u0000~\u0000Fq\u0000~\u00002sq\u0000~\u0000!t\u0000\u000blazyLoadingq" +
        			"\u0000~\u0000@q\u0000~\u0000 sq\u0000~\u0000\u0012ppsq\u0000~\u0000\u0017q" +
        			"\u0000~\u0000\u0016psq\u0000~\u0000(ppsr\u0000 com.sun.msv.datatype.xsd.Int" +
        			"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr" +
        			"\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k" +
        			"\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XS" +
        			"DatatypeImpl;xq\u0000~\u0000-q\u0000~\u00002t\u0000\u0003intq\u0000~\u00006sr" +
        			"\u0000*com.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000" +
        			"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd" +
        			".RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L" +
        			"\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.datatype." +
        			"xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000" +
        			"\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000" +
        			"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000" +
        			"\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000OL\u0000\fconcreteTypet" +
        			"\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000" +
        			"\"xq\u0000~\u0000/ppq\u0000~\u00006\u0000\u0001sr\u0000*com.sun.msv.datatype." +
        			"xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002" +
        			"\u0000\u0000xq\u0000~\u0000Sppq\u0000~\u00006\u0000\u0000sr\u0000!com.sun.msv." +
        			"datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002" +
        			"\u0000\u0000xq\u0000~\u0000Nq\u0000~\u00002t\u0000\u0004longq\u0000~\u00006sq" +
        			"\u0000~\u0000Rppq\u0000~\u00006\u0000\u0001sq\u0000~\u0000Yppq\u0000~\u00006" +
        			"\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000" +
        			"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Nq\u0000~" +
        			"\u00002t\u0000\u0007integerq\u0000~\u00006sr\u0000,com.sun.msv.datatype.xsd." +
        			"FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000" +
        			"\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexical" +
        			"ConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Vppq"+
        			"\u0000~\u00006\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000" +
        			"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000-q" +
        			"\u0000~\u00002t\u0000\u0007decimalq\u0000~\u00006q\u0000~\u0000gt\u0000\u000e" +
        			"fractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000at\u0000\fminInclusivesr" +
        			"\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000" +
        			"\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d" +
        			"\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000"+
        			"\u0000\u0000q\u0000~\u0000at\u0000\fmaxInclusivesq\u0000~\u0000k\u007f\u00ff" +
        			"\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000\\q\u0000~\u0000jsr\u0000" +
        			"\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000" +
        			"\u0001I\u0000\u0005valuexq\u0000~\u0000l\u0080\u0000\u0000\u0000q\u0000~\u0000" +
        			"\\q\u0000~\u0000nsq\u0000~\u0000p\u007f\u00ff\u00ff\u00ffq\u0000~\u00008sq" +
        			"\u0000~\u00009q\u0000~\u0000Qq\u0000~\u00002sq\u0000~\u0000!t\u0000\u000brefr" +
        			"eshTimeq\u0000~\u0000@q\u0000~\u0000 sq\u0000~\u0000\u0012ppsq\u0000~\u0000" +
        			"\u0017q\u0000~\u0000\u0016pq\u0000~\u0000+q\u0000~\u0000;q\u0000~\u0000 sq" +
        			"\u0000~\u0000!t\u0000\fXMLCDE_CACHEq\u0000~\u0000@sr\u0000\"com.sun.msv.grammar"+
        			".ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000" +
        			"\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Clo" +
        			"sedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7" +
        			"j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000" +
        			"\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expression" +
        			"Pool;xp\u0000\u0000\u0000\u000b\u0001pq\u0000~\u0000\tq\u0000~\u0000\u0013q" +
        			"\u0000~\u0000\u0014q\u0000~\u0000\nq\u0000~\u0000Aq\u0000~\u0000J" +
        			"q\u0000~\u0000\u000eq\u0000~\u0000\u0010q\u0000~\u0000\u000bq\u0000~" +
        			"\u0000&q\u0000~\u0000vx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }
    /**
     * UnMarshaller class.
     */
    public class Unmarshaller // NOPMD
        extends AbstractUnmarshallingEventHandlerImpl
    {
    	/**
    	 *
    	 * @param context UnmarshallingContext object
    	 */
    	public Unmarshaller(UnmarshallingContext context)
    	{
            super(context, "----");
        }
    	/**
    	 *
    	 * @param context UnmarshallingContext object
    	 * @param startState integer value.
    	 */
        protected Unmarshaller(UnmarshallingContext context, int startState)
        {
            this(context);
            state = startState;
        }
        /**
         * @return Object
         */
        public java.lang.Object owner()
        {
            return edu.wustl.common.cde.xml.impl.XMLCDECACHEImpl.this;
        }
        /**
         * @param uri String parameter
         * @param local String parameter
         * @param qname String parameter
         * @param atts Attributes object
         * @throws org.xml.sax.SAXException throw SAXException
         */
        public void enterElement(java.lang.String uri, // NOPMD
        		java.lang.String local, java.lang.String qname, org.xml.sax.Attributes atts)
            throws org.xml.sax.SAXException
        {
            boolean flag = true ;
            outer:
            while (true)
            {
                switch (state)
                {
                    case  Constants.CONSTANT_ONE :
                        flag = checkEnterElement(uri, local, qname, atts) ;
                        break;
                    case  0 :
                    	 if ((Constants.XMLCDE_CACHE == local)&&("" == uri))
                         {
                             context.pushAttributes(atts, false);
                             state = Constants.CONSTANT_ONE;
                             flag = false;
                             break ;
                         }
                        break;
                    case Constants.CONSTANT_THREE :
                        revertToParentFromEnterElement(uri, local, qname, atts);
                        flag = false;  break ;
                    default :
                }
                if(!flag)
                {
                	break ;
                }
                super.enterElement(uri, local, qname, atts);  break;
            }
        }
        /**
         * @param uri String parameter
         * @param local String parameter
         * @param qname String parameter
         * @throws org.xml.sax.SAXException throw SAXException
         */
        public void leaveElement(java.lang.String uri, // NOPMD
        		java.lang.String local, java.lang.String qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            boolean flag =  true ;
            outer:
            while (true)
            {
                switch (state)
                {
                    case  Constants.CONSTANT_ONE :
                        attIdx = context.getAttribute("", Constants.LAZY_LOADING);
                        if (attIdx >= 0)
                        {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(uri, local, qname);
                            flag = false ; break ;
                        }
                        attIdx = context.getAttribute("", Constants.REFRESH_TIME);
                        if (attIdx >= 0)
                        {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(uri, local, qname);
                            flag = false ; break ;
                        }
                        break;
                    case  Constants.CONSTANT_TWO :
                        if ((Constants.XMLCDE_CACHE == local)&&("" == uri))
                        {
                            context.popAttributes();
                            state = Constants.CONSTANT_THREE;
                            flag = false ; break ;
                        }
                        break;
                    case  Constants.CONSTANT_THREE :
                        revertToParentFromLeaveElement(uri, local, qname);
                        flag = false ; break ;

                    default :
                }
                if(!flag)
                {
                	break ;
                }
                super.leaveElement(uri, local, qname);
                break;
            }
        }
        /**
         * @param uri String parameter
         * @param local String parameter
         * @param qname String parameter
         * @throws org.xml.sax.SAXException throw SAXException
         */
        public void enterAttribute(java.lang.String uri,
        		java.lang.String local, java.lang.String qname)
            throws org.xml.sax.SAXException
        {
            boolean flag = true ;
            outer:
            while (true)
            {
                switch (state)
                {
                    case Constants.CONSTANT_ONE :
                        flag = checkEnterAttribute(uri, local, qname) ;
                        break;

                    case  Constants.CONSTANT_THREE :
                        revertToParentFromEnterAttribute(uri, local, qname);
                        flag = false ;
                        break ;
                    default :
                }
                if(!flag)
                {
                	break ;
                }
                super.enterAttribute(uri, local, qname);
                break;
            }
        }
        /**
         * @param uri String parameter
         * @param local String parameter
         * @param qname String parameter
         * @throws org.xml.sax.SAXException throw SAXException
         */
        public void leaveAttribute(java.lang.String uri,
        		java.lang.String local, java.lang.String qname)
            throws org.xml.sax.SAXException
        {
            boolean flag = true ;
            outer:
            while (true)
            {
            	switch (state)
            	{
            	case  Constants.CONSTANT_ONE :
            		flag = checkLeaveAttribute(uri, local, qname) ;
            		break;

            	case  Constants.CONSTANT_THREE :
            		revertToParentFromLeaveAttribute(uri, local, qname);
            		flag = false ;
            		break ;

            	default :
            	}
                if(!flag)
                {
                	break ;
                }
                super.leaveAttribute(uri, local, qname);
                break;
            }
        }
        /**
         * @param value String value
         * @throws  org.xml.sax.SAXException throw SAXException
         */
        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            outer:
            while (true)
            {
                try
                {
                    switch (state)
                    {
                        case Constants.CONSTANT_ONE :
                        	checkHandleText(value) ;
                            break;
                        case Constants.CONSTANT_THREE :
                            revertToParentFromText(value);
                            break ;
                        default :
                    }
                }
                catch (java.lang.RuntimeException e)
                {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }
        /**
         *
         * @param uri String variable
         * @param local String variable
         * @param qname String variable
         * @return boolean result
         * @throws SAXException throw SAXException
         */
        public boolean checkEnterAttribute(String uri ,String local,String qname)
        throws SAXException
        {
        	boolean flag = true ;
        	if (((Constants.LAZY_LOADING == local)&&("" == uri)) ||
        			((Constants.REFRESH_TIME == local)&&("" == uri)) )
            {
                spawnHandlerFromEnterAttribute((((edu.wustl.common.cde.xml.impl.
                	XMLCDECacheTypeImpl)edu.wustl.common.cde.xml.impl.XMLCDECACHEImpl.this)
                	.new Unmarshaller(context)),Constants.CONSTANT_TWO, uri, local, qname);
                flag = false ;
            }
           	return flag;
        }
        /**
         *
         * @param uri String variable
         * @param local String variable
         * @param qname String variable
         * @return boolean result
         * @throws SAXException throw SAXException
         */
        public boolean checkLeaveAttribute(String uri ,String local,String qname)
        throws SAXException
        {
        	boolean flag = true ;
        	int attIdx = context.getAttribute("", Constants.LAZY_LOADING);
        	if (attIdx >= 0)
        	{
        		context.consumeAttribute(attIdx);
        		context.getCurrentHandler().leaveAttribute(uri, local, qname);
        		flag = false ;
        	}
        	else
        	{
        		attIdx = context.getAttribute("", Constants.REFRESH_TIME);
        		if (attIdx >= 0)
        		{
        			context.consumeAttribute(attIdx);
        			context.getCurrentHandler().leaveAttribute(uri, local, qname);
        			flag = false ;
        		}
        	}
        	return flag ;
        }
        /**
        *
        * @param uri String variable
        * @param local String variable
        * @param qname String variable
        * @param atts Attributes object.
        * @return boolean result
        * @throws SAXException throw SAXException
        */
       public boolean checkEnterElement(String uri ,String local,String qname,org.xml.sax.Attributes atts)
       throws SAXException
       {
    	   boolean flag = true ;
    	   int attIdx = context.getAttribute("", Constants.LAZY_LOADING);
    	   if (attIdx >= 0)
    	   {
    		   context.consumeAttribute(attIdx);
    		   context.getCurrentHandler().enterElement(uri, local, qname, atts);
    		   flag = false;
    	   }
    	   else
    	   {
    		   attIdx = context.getAttribute("", Constants.REFRESH_TIME);
    		   if (attIdx >= 0)
    		   {
    			   context.consumeAttribute(attIdx);
    			   context.getCurrentHandler().enterElement(uri, local, qname, atts);
    			   flag = false;
    		   }
    		   else if ((Constants.XMLCDE == local)&&("" == uri))
    		   {
    			   spawnHandlerFromEnterElement((((edu.wustl.common.cde.xml.impl.XMLCDECacheTypeImpl)
    				 edu.wustl.common.cde.xml.impl.XMLCDECACHEImpl.this).new
    				 Unmarshaller(context)),Constants.CONSTANT_TWO, uri, local, qname, atts);
    			   flag = false;
    		   }
    	   }
    	   return flag ;
       }
       /**
        *
        * @param value String variable.
        * @throws SAXException throw SAXException
        */
       public void checkHandleText(String value) throws SAXException
       {
    	   int attIdx = context.getAttribute("", Constants.LAZY_LOADING);
    	   if (attIdx >= 0)
    	   {
    		   context.consumeAttribute(attIdx);
    		   context.getCurrentHandler().text(value);
    	   }
    	   else
    	   {
    		   attIdx = context.getAttribute("", Constants.REFRESH_TIME);
    		   if (attIdx >= 0)
    		   {
    			   context.consumeAttribute(attIdx);
    			   context.getCurrentHandler().text(value);
    		   }
    	   }
       }
    }
}
